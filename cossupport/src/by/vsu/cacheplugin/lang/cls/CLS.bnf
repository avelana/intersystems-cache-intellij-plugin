
{
  parserClass="by.vsu.cacheplugin.lang.cls.parser.CacheObjectScriptClsParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="CacheObjectScriptCls"
  psiImplClassSuffix="Impl"
  psiPackage="by.vsu.cacheplugin.lang.cls.psi"
  psiImplPackage="by.vsu.cacheplugin.lang.cls.psi.impl"
 
  elementTypeHolderClass="by.vsu.cacheplugin.lang.cls.psi.CacheObjectScriptClsTypes"
  elementTypeClass="by.vsu.cacheplugin.lang.cls.psi.CacheObjectScriptClsElementType"
  tokenTypeClass="by.vsu.cacheplugin.lang.cls.psi.CacheObjectScriptClsTokenType"
}
 
cosFile ::= item_*
 
private item_ ::= (classdef|COMMENT|DESCRIPTION)

//class definition
classdef::= [includeBlock]{DESCRIPTION* COMMENT*}[importBlock] defBlock  classEntry
classEntry::=lbrace {fkey* method* property* query* xdata* param* trigger* index* projection* DESCRIPTION* COMMENT*} rbrace
includeBlock::=(include fileList)
importBlock::=(import classList)
defBlock::= classNameBlock [extendBlock] [keywordsBlock]
classNameBlock::=class className
extendBlock::= [as className ] [extends classList]
classList::= className | (lpar (className comma)+ className rpar)
fileList::= fileName | (lpar (fileName comma)+ fileName rpar)
keywordsBlock::=lbracket(keywordItem comma)* keywordItem rbracket
keywordItem::= keyword [(eq keyword) |(eq lpar (keyword comma)+ keyword rpar)]

//foreign key definition
fkey::=fkey_keyWord fkey_Name lpar fprops rpar [fref_Word fref_Class lpar fprops rpar] [fkeyKeywordBlock] semicolon
fkeyKeywordBlock::=lbracket(fkeywordItem comma)* fkeywordItem rbracket
fkeywordItem::= fkeyword [(eq fkeyword) |(eq lpar (fkeyword comma)+ fkeyword rpar)]
fprops::= fprop | ((fprop comma)* fprop)

//